version: "3.7"

services:
  # Сервис заказов
  order_service:
    build: ./order_service
    container_name: order_service
    ports:
      - "8001:8000"
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      order_db:
        condition: service_healthy
    environment:
      REDIS_URL: "redis://redis1:6379/0"
      DATABASE_URL: "postgres+asyncpg://user:password@order_db:5432/order_db"
      RABBITMQ_URL: "amqp://shkibidi1:pokazal1@rabbitmq:5672/"
      RABBITMQ_HOST: rabbitmq
    logging:
      driver: "json-file"

  # База данных заказов
  order_db:
    image: postgres:13
    container_name: order_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: order_db
  # Разрешает подключение без пароля в dev-среде
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d order_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"

  # RabbitMQ для асинхронных очередей
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq1
    ports:
      - "5672:5672"
      - "15672:15672"  # http://localhost:15672 (guest/guest)
    environment:
      RABBITMQ_DEFAULT_USER: shkibidi1
      RABBITMQ_DEFAULT_PASS: pokazal1
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"

  # Redis для кеширования и очередей
  redis:
    image: redis:alpine
    container_name: redis1
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    logging:
      driver: "json-file"
